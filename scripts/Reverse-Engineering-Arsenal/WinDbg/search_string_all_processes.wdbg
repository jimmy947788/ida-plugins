$$
$$ Author: Javier Vicente Vallejo
$$ Twitter: @vallejocc
$$ Web: http://www.vallejo.cc
$$
$$     $$>a<search_string_all_processes.wdbg <string>
$$
$$ This script is useful for search a given string through all the running processes
$$

aS stage @$t19
aS temp @$t18
aS baseSearch @$t17
aS stop @$t16

.block
{
    .sympath "SRV*c:\symcache*http://msdl.microsoft.com/download/symbols";
    .reload
}

.block
{
    r stage = 2
    
    .foreach (processes_tok { !process 0 0 })
    {
        .if($scmp("${processes_tok}","PROCESS")==0)
        {
            .if(${stage}==2)
            {
                $$stage==2 is used to skip the first apparition of PROCESS string in the results of !process 0 0
                r stage = 0
            }
            .else
            {            
                r stage = 1
            }
        }
        .elsif(${stage}==1)
        {
            .printf /D "<b>Analyzing process ${processes_tok}</b>\n"
            
            r stage = 0
        
            .process /i ${processes_tok}
            g
            
            .block
            {
                .reload
            }
            
            .block
            {
                .reload /user
            }
        
            r ${stop} = 0
            r ${baseSearch} = 0
        
            .while(${stop} == 0)
            {
                .printf "searching base %x\n", ${baseSearch}
                
                r @$t0 = ${baseSearch}
                
                s -a @$t0 L?0x10000000 "${$arg1}"
                
                .if(${baseSearch} >= 0x70000000)
                {
                    .printf "next process\n"
                    r ${stop} = 1
                }
                
                r ${baseSearch} = ${baseSearch} + 0x10000000            
            }
        }    
    }

    ad stage
    ad temp
    ad baseSearch
    ad stop
}